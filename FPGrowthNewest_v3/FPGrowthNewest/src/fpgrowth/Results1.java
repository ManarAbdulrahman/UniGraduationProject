/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fpgrowth;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import java.awt.Color;
import javax.swing.JLabel;

/**
 *
 * @author le
 */
public class Results1 extends javax.swing.JFrame {

    /**
     * Creates new form Results1
     */
    private static int selected = 1;
    private static int threshold = 2;
    private static File selectedFile;
    //We write the result in outputfile temp use for show in interface from, so in this form we will get apart of data for Tree, Frequent, All, Role
    private static String MarBeginfrequent = "the frequent items are";//the output for frequent begin from this string in output file
    private static String MarEndfrequent = "the elements of the header are";//the output for frequent end at this string in output file
    
    private static String MarBeginTree = "I am in print tree";//the output for tree begin from this string in output file
    
    public Results1() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        
        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        
        // Move the window
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        scrollPane1 = new java.awt.ScrollPane();
        textArea1 = new java.awt.TextArea();
        textArea1.setEditable(false);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel3.setForeground(new Color(51, 153, 153));
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel4.setFont(new Font("Times New Roman", Font.BOLD, 16));
        txtMinConf = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jLabel2.setText("Enter your data-set here");

        jRadioButton2.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jRadioButton2.setText("Frequent");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jRadioButton3.setText("Rule");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("All");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jLabel1.setText("Result");
        scrollPane1.add(textArea1);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton2.setText("Result");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new Font("Times New Roman", Font.BOLD, 18)); // NOI18N
        jLabel3.setText("Enter a Threshold and  Confidence:");

        jRadioButton5.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jRadioButton5.setSelected(true);
        jRadioButton5.setText("Default");
        jRadioButton5.setToolTipText("Default is 2");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jRadioButton6.setFont(new Font("Times New Roman", Font.BOLD, 16)); // NOI18N
        jRadioButton6.setText("New Threshold");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jTextField1.setText("(default is 2)");
        jTextField1.setToolTipText("new value");
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("minConf");
        jTextArea1 = new javax.swing.JTextArea();
        
                jTextArea1.setColumns(20);
                jTextArea1.setRows(5);
        
        lblNewLabel = new JLabel("Result you want to show:");
        lblNewLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
        lblNewLabel.setForeground(new Color(51, 153, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        							.addComponent(jTextArea1, GroupLayout.PREFERRED_SIZE, 850, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED, 420, Short.MAX_VALUE)
        							.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        						.addComponent(scrollPane1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(jLabel1)
        								.addComponent(jLabel2))
        							.addPreferredGap(ComponentPlacement.RELATED, 762, Short.MAX_VALUE)))
        					.addContainerGap())
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(lblNewLabel)
        							.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        							.addComponent(jRadioButton4))
        						.addComponent(jLabel3, Alignment.LEADING))
        					.addGap(37)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jRadioButton5, Alignment.TRAILING)
        						.addComponent(jRadioButton2, Alignment.TRAILING))
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createSequentialGroup()
        							.addGap(18)
        							.addComponent(jRadioButton6)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(jLabel4)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(txtMinConf, GroupLayout.PREFERRED_SIZE, 75, GroupLayout.PREFERRED_SIZE))
        						.addGroup(layout.createSequentialGroup()
        							.addGap(38)
        							.addComponent(jRadioButton3)))
        					.addGap(444))))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(141)
        			.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
        			.addGap(72)
        			.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
        			.addGap(77)
        			.addComponent(jButton3, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(687, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel3)
        				.addComponent(jRadioButton5)
        				.addComponent(jRadioButton6)
        				.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel4)
        				.addComponent(txtMinConf, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblNewLabel)
        				.addComponent(jRadioButton4)
        				.addComponent(jRadioButton2)
        				.addComponent(jRadioButton3))
        			.addGap(20)
        			.addComponent(jLabel2)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 230, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(8)
        					.addComponent(jTextArea1, GroupLayout.PREFERRED_SIZE, 228, GroupLayout.PREFERRED_SIZE)))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(jLabel1)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(scrollPane1, GroupLayout.PREFERRED_SIZE, 292, GroupLayout.PREFERRED_SIZE)
        			.addGap(22)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jButton3, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap())
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton2.isSelected())
        {
            selected = 2;
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
        }else{
            selected = 0;
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(true);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton3.isSelected())
        {
            selected = 1;
            jRadioButton2.setSelected(false);
            jRadioButton4.setSelected(false);
        }else{
            selected = 0;
            jRadioButton2.setSelected(false);
            jRadioButton4.setSelected(true);
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton4.isSelected())
        {
            selected = 0;
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
        }else{
            selected = 0;//default
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Inter m = new Inter();
        m.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(jTextArea1.getText().equals(""))
        {
            if(selected != 1)
                JOptionPane.showMessageDialog(null, "You must enter your data-set");
            else
                JOptionPane.showMessageDialog(null, "You must enter only number for input in correctly format");
        }else{
            if(selected != 1){
                try{
                    if(jTextField1.isEnabled())
                        threshold = Integer.parseInt(jTextField1.getText().trim());
                    PrintWriter output = null; 
                    selectedFile = new File("newdataset");
                    if(!selectedFile.exists())
                            selectedFile.createNewFile();
                        output = new PrintWriter(selectedFile);
                    output.printf(jTextArea1.getText());
                    output.close();
                    FPGrowth app = new FPGrowth(selectedFile, threshold);
                    selectedFile.deleteOnExit();
                    File f = new File("outputFile.txt");
                    if(f.exists())
                    {
                        Scanner input = new Scanner(f);
                        String result = "";
                        String resultTree = "";
                        String resultFre = "";
                        int read_tree = 0;
                        int read_fre = 0;
                        while (input.hasNextLine())
                        {
                            String temp = input.nextLine();
                            if(temp.trim().equals(MarBeginfrequent))
                            {
                                read_fre = 1;
                            }
                            if(temp.trim().equals(MarBeginTree))
                            {
                                read_tree = 1;
                            }
                            if(temp.trim().equals(MarEndfrequent))
                            {
                                read_fre = 0;
                            }
                            if(read_tree == 1)
                            resultTree = resultTree + temp+"\n";
                            if(read_fre == 1)
                            resultFre = resultFre + temp+"\n";
                            result = result + temp+"\n";
                        }
                        if(selected == 3)
                        textArea1.setText(resultTree);
                        else if(selected == 2)
                        {
                            File f1 = new File("Frequent.txt");
                            if(f1.exists())
                            {
                                Scanner input1 = new Scanner(f1);
                                resultFre = "";
                                while (input1.hasNextLine())
                                {
                                    String temp1 = input1.nextLine();
                                    resultFre = resultFre + temp1+"\n";
                                }
                                input1.close();
                            }
                            
                            textArea1.setText(resultFre);
                        }
                        else
                        textArea1.setText(result);
                        //JOptionPane.showMessageDialog(null, "The reulst:\n"+result);
                        input.close();
                        //remove file
                        f.deleteOnExit();
                    }
                }catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "You must enter the number only for threshold value");
                }
            }else{
                //for rules
                try{
                    //create file input for rules
                    PrintWriter output = null; 
                    selectedFile = new File("InputRules.txt");
                    if(!selectedFile.exists())
                            selectedFile.createNewFile();
                    output = new PrintWriter(selectedFile);
                    String datawrite = jTextArea1.getText();
                    output.printf(datawrite);
                    output.close();
                    //get minconf
                    double minconf = 0.60;
                    double minsupp = 0.5;
                    try{
                        minconf = Double.parseDouble(txtMinConf.getText().trim());
                        if(minconf >= 1 )
                            minconf = minconf/100;
                    } catch (NumberFormatException e) {
                      //the parseDouble failed and you need to handle it here
                    }
                    try{
                        minsupp = Double.parseDouble(jTextField1.getText().trim());
                        if(minsupp >= 1 )
                            minsupp = minsupp/100;
                    } catch (NumberFormatException e) {
                      //the parseDouble failed and you need to handle it here
                        minsupp = 0.02;
                    }
                    
                    //create output
                    AssociationRules_FPGrowth_saveToFile fpgrowth_rule = new AssociationRules_FPGrowth_saveToFile(".//InputRules.txt",minconf,minsupp);
                    selectedFile.deleteOnExit();
                    //read from file Rules.txt and then show in GUI
                    File f = new File("Rules.txt");
                    if(f.exists())
                    {
                        Scanner input = new Scanner(f);
                        String result = "";
                        while (input.hasNextLine()) 
                        {
                            String temp = input.nextLine();
                            result = result + temp+"\n";
                        }
                        textArea1.setText(result);
                        input.close();
                        //remove file
                        f.deleteOnExit();
                    }
                }catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Input wrong format. Input must only number and correct format.");
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(textArea1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No results to save");
        }else{
            try{
                PrintWriter output = null; 
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Specify a file to save");

                int userSelection = fileChooser.showSaveDialog(this);
                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    File saveFile = fileChooser.getSelectedFile();
                    if(!saveFile.exists())
                            saveFile.createNewFile();
                    output = new PrintWriter(saveFile);
                    output.printf(textArea1.getText());
                    output.close();
                    JOptionPane.showMessageDialog(null, "The results have been saved");
                }


            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Cannot save result");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton5.isSelected())
        {
            threshold = 2;
            jRadioButton6.setSelected(false);
            jTextField1.setEnabled(false);
        }else{
            jRadioButton6.setSelected(true);
            jTextField1.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton6.isSelected())
        { 
            jRadioButton5.setSelected(false);
            jTextField1.setEnabled(true);
            jTextField1.setText("");                                                                                                                                                                                                    
        }else{
            threshold = 2;
            jRadioButton5.setSelected(true);
            jTextField1.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Results1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Results1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Results1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Results1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Results1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private java.awt.ScrollPane scrollPane1;
    private java.awt.TextArea textArea1;
    private javax.swing.JTextField txtMinConf;
    private JLabel lblNewLabel;
    // End of variables declaration//GEN-END:variables
}
